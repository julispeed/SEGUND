// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonaCompleta.Data;

#nullable disable

namespace PersonaCompleta.Migrations
{
    [DbContext(typeof(AppDBCont))]
    partial class AppDBContModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonaCompleta.Models.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("documento")
                        .HasColumnType("int");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("segundonombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("id");

                    b.ToTable("Documento");

                    b.HasData(
                        new
                        {
                            id = 1,
                            LastUpdated = new DateTime(2024, 2, 6, 18, 4, 50, 432, DateTimeKind.Local).AddTicks(6803),
                            apellido = "Acuña",
                            documento = 44120148,
                            edad = 20,
                            fecha = new DateTime(2024, 2, 6, 18, 4, 50, 432, DateTimeKind.Local).AddTicks(6792),
                            imagen = "",
                            nacionalidad = "ARG",
                            nombre = "Julián",
                            segundonombre = "Martin",
                            sexo = "M"
                        });
                });

            modelBuilder.Entity("PersonaCompleta.Models.Secundario", b =>
                {
                    b.Property<int>("idCantdoc")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaID")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("barrio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCantdoc");

                    b.HasIndex("PersonaID");

                    b.ToTable("Secundario");
                });

            modelBuilder.Entity("PersonaCompleta.Models.Secundario", b =>
                {
                    b.HasOne("PersonaCompleta.Models.Persona", "documento")
                        .WithMany()
                        .HasForeignKey("PersonaID");

                    b.Navigation("documento");
                });
#pragma warning restore 612, 618
        }
    }
}
